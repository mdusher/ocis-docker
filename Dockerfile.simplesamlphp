FROM alpine:latest

ENV SSP_HOST='127.0.0.1'

# Setup apache and php
RUN apk --no-cache add \
	apache2 \
	git \
	openssh-client \
	bash \
    tar \
	curl \
	php7-apache2 \
	php7-bcmath \
	php7-bz2 \
	php7-calendar \
	php7-common \
	php7-ctype \
	php7-curl \
	php7-dom \
	php7-gd \
	php7-iconv \
	php7-json \
	php7-mbstring \
	php7-mcrypt \
	php7-mysqli \
	php7-mysqlnd \
	php7-openssl \
	php7-pdo_mysql \
	php7-pdo_pgsql \
	php7-pdo_sqlite \
	php7-phar \
	php7-session \
    php7-simplexml \
    php7-tokenizer \
    php7-xmlwriter \
	php7-xml \
	php7-xmlrpc \
	php7-sodium \
	&& rm -f /var/cache/apk/* \
	&& mkdir -p /usr/local/apache2/htdocs/ && \
	sed -i 's#^DocumentRoot ".*#DocumentRoot "/usr/local/apache2/htdocs"#g' /etc/apache2/httpd.conf && \
	sed -i 's#Directory "/var/www/localhost/htdocs"#Directory "/usr/local/apache2/htdocs"#g' /etc/apache2/httpd.conf && \
	sed -i 's#AllowOverride None#AllowOverride All#' /etc/apache2/httpd.conf && \
	sed -i 's/#LoadModule\ rewrite_module/LoadModule\ rewrite_module/' /etc/apache2/httpd.conf && \
	sed -i 's/memory_limit = .*/memory_limit = 256M/' /etc/php7/php.ini

# Composer 2
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer 

# SimpleSAML
RUN cd /tmp && \
	curl -L -o /tmp/ssp.tar.gz https://github.com/simplesamlphp/simplesamlphp/releases/download/v1.19.1/simplesamlphp-1.19.1.tar.gz && \
	tar xzf /tmp/ssp.tar.gz && \
	mv simplesamlphp-1.19.1 /mnt/simplesamlphp && \
	cd /mnt/simplesamlphp && \
    composer require simplesamlphp/simplesamlphp-module-oidc:dev-master && \
	chown -R apache:apache /mnt/simplesamlphp && \
    rm -f /mnt/simplesamlphp/config/* && \
	rm -f /mnt/simplesamlphp/metadata/* && \
	rm -f /tmp/ssp.tar.gz && \
    touch /mnt/simplesamlphp/modules/exampleauth/enable && \
	touch /mnt/simplesamlphp/modules/oidc/enable
#    grep -rl 'SimpleSAML\\Modules' /mnt/simplesamlphp/modules/oidc | xargs -I {} sed -i 's;SimpleSAML\\Modules;SimpleSAML\\Module;g' {}

COPY files/simplesamlphp /

RUN chmod +x /docker-entrypoint.sh

ENTRYPOINT ["/docker-entrypoint.sh"]
