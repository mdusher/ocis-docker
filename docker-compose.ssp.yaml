version: '3.7'
services:
    traefik:
        image: traefik:v2.5
        networks:
          ocis-net:
            aliases:
              - ${OCIS_DOMAIN:-ocis.owncloud.test}
              - ${SSP_DOMAIN:-simplesaml.owncloud.test}
        command:
          - "--log.level=${TRAEFIK_LOG_LEVEL:-ERROR}"
          - "--certificatesResolvers.http.acme.email=${TRAEFIK_ACME_MAIL:-example@example.org}"
          - "--certificatesResolvers.http.acme.storage=/certs/acme.json"
          - "--certificatesResolvers.http.acme.httpChallenge.entryPoint=http"
          - "--api.dashboard=true"
          - "--entryPoints.http.address=:80"
          - "--entryPoints.http.http.redirections.entryPoint.to=https"
          - "--entryPoints.http.http.redirections.entryPoint.scheme=https"
          - "--entryPoints.https.address=:443"
          - "--providers.docker.endpoint=unix:///var/run/docker.sock"
          - "--providers.docker.exposedByDefault=false"
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - "/var/run/docker.sock:/var/run/docker.sock:ro"
          - "certs:/certs"
        labels:
          - "traefik.enable=${TRAEFIK_DASHBOARD:-false}"
          - "traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_BASIC_AUTH_USERS:-admin:$apr1$4vqie50r$YQAmQdtmz5n9rEALhxJ4l.}" # defaults to admin:admin
          - "traefik.http.routers.traefik.entrypoints=https"
          - "traefik.http.routers.traefik.rule=Host(`${TRAEFIK_DOMAIN:-traefik.owncloud.test}`)"
          - "traefik.http.routers.traefik.middlewares=traefik-auth"
          - "traefik.http.routers.traefik.tls.certresolver=http"
          - "traefik.http.routers.traefik.service=api@internal"
        logging:
          driver: "json-file"
        restart: always

    ocis:
        image: mdusher/ocis:latest
        build:
            context: .
            dockerfile: Dockerfile
        networks:
            ocis-net:
        environment:
            # IDP specific configuration
            OCIS_DISABLE_IDP: "true"
            PROXY_AUTOPROVISION_ACCOUNTS: "true"
            PROXY_OIDC_ISSUER: https://${OCIS_DOMAIN:-ocis.owncloud.test}
            WEB_OIDC_AUTHORITY: https://${OCIS_DOMAIN:-ocis.owncloud.test}/simplesaml/
            WEB_OIDC_CLIENT_ID: ${OCIS_OIDC_CLIENT_ID:-web}
            WEB_OIDC_METADATA_URL: https://${OCIS_DOMAIN:-ocis.owncloud.test}/simplesaml/module.php/oidc/openid-configuration.php
            STORAGE_OIDC_ISSUER: https://${OCIS_DOMAIN:-ocis.owncloud.test}
            STORAGE_LDAP_IDP: https://${OCIS_DOMAIN:-ocis.owncloud.test}/simplesaml/
            # general config
            OCIS_URL: https://${OCIS_DOMAIN:-ocis.owncloud.test}
            OCIS_LOG_LEVEL: ${OCIS_LOG_LEVEL:-error} # make oCIS less verbose
            PROXY_OIDC_INSECURE: "${INSECURE:-false}" # needed if Traefik is using self generated certificates
            PROXY_TLS: "false" # do not use SSL between Traefik and oCIS
            # change default secrets
            IDP_LDAP_BIND_PASSWORD: ${IDP_LDAP_BIND_PASSWORD:-idp}
            STORAGE_LDAP_BIND_PASSWORD: ${STORAGE_LDAP_BIND_PASSWORD:-reva}
            OCIS_JWT_SECRET: ${OCIS_JWT_SECRET:-Pive-Fumkiu4}
            OCIS_TRANSFER_SECRET: ${STORAGE_TRANSFER_SECRET:-replace-me-with-a-transfer-secret}
        volumes:
        - ./config/ocis/entrypoint-override.sh:/entrypoint-override.sh
        - ocis_data:/var/tmp/ocis
        labels:
        - "traefik.enable=true"
        - "traefik.http.routers.ocis.entrypoints=https"
        - "traefik.http.routers.ocis.rule=Host(`${OCIS_DOMAIN:-ocis.owncloud.test}`)"
        - "traefik.http.routers.ocis.tls.certresolver=http"
        - "traefik.http.routers.ocis.service=ocis"
        - "traefik.http.services.ocis.loadbalancer.server.port=9200"
        - "traefik.http.routers.simplesaml-ocis.entrypoints=https"
        - "traefik.http.routers.simplesaml-ocis.rule=Host(`${OCIS_DOMAIN:-ocis.owncloud.test}`) && PathPrefix(`/simplesaml/`)"
        - "traefik.http.routers.simplesaml-ocis.tls.certresolver=http"
        - "traefik.http.routers.simplesaml-ocis.service=simplesaml"
        - "traefik.http.services.simplesaml-ocis.loadbalancer.server.port=80"
        logging:
            driver: "json-file"
        restart: always
        depends_on:
        - simplesaml

    simplesaml:
        build:
          context: .
          dockerfile: Dockerfile.simplesamlphp
        networks:
          ocis-net:
        volumes:
        - log_data:/var/log/apache2
        environment:
        - SSP_HOST=${OCIS_DOMAIN:-ocis.owncloud.test}
        labels:
        - "traefik.enable=true"
        - "traefik.http.routers.simplesaml.entrypoints=https"
        - "traefik.http.routers.simplesaml.rule=Host(`${OCIS_DOMAIN:-ocis.owncloud.test}`) && PathPrefix(`/simplesaml/`)"
        - "traefik.http.routers.simplesaml.tls.certresolver=http"
        - "traefik.http.routers.simplesaml.service=simplesaml"
        - "traefik.http.services.simplesaml.loadbalancer.server.port=80"
        # let /.well-known/openid-configuration be served by Simplesaml
        - "traefik.http.middlewares.idp-headers.headers.customrequestheaders.X-Forwarded-Host=${OCIS_DOMAIN:-ocis.owncloud.test}"
        - "traefik.http.middlewares.idp-prefix.addprefix.prefix=/simplesaml/"
        - "traefik.http.middlewares.idp-override.chain.middlewares=idp-headers,idp-prefix"
        - "traefik.http.routers.idp-wellknown.entrypoints=https"
        - "traefik.http.routers.idp-wellknown.tls.certresolver=http"
        - "traefik.http.routers.idp-wellknown.rule=Host(`${OCIS_DOMAIN:-ocis.owncloud.test}`) && Path(`/.well-known/openid-configuration`)"
        - "traefik.http.routers.idp-wellknown.middlewares=idp-override"
        - "traefik.http.routers.idp-wellknown.service=simplesaml"
        depends_on:
        - mariadb

    mariadb:
        image: mariadb:10
        networks:
          ocis-net:
        environment:
          MARIADB_DATABASE: simplesaml
          MARIADB_USER: simplesaml
          MARIADB_PASSWORD: simplesaml
          MARIADB_ROOT_PASSWORD: simplesaml
        volumes:
        - mariadb_data:/var/lib/mariadb
        - ./files/mariadb/oidc.sql:/docker-entrypoint-initdb.d/10-module_oidc.sql:ro

networks:
    ocis-net:

volumes:
    log_data:
        driver: local
    certs:
        driver: local
    mariadb_data:
        driver: local
    ocis_data:
        driver: local